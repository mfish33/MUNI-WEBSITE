diff --git a/node_modules/probe-image-size/index.js b/node_modules/probe-image-size/index.js
index 2f9da2f..10554da 100644
--- a/node_modules/probe-image-size/index.js
+++ b/node_modules/probe-image-size/index.js
@@ -1,23 +1,2 @@
-'use strict';
-
-
-var probeStream = require('./stream');
-var probeHttp   = require('./http');
-
-/* eslint-disable consistent-return */
-
-module.exports = function get_image_size(src, options) {
-
-  if (typeof src.on === 'function' && typeof src.emit === 'function') {
-    // looks like an EventEmitter, treating it as a stream
-    return probeStream(src, options);
-  }
-
-  // HTTP (not stream)
-  return probeHttp(src, options || {});
-};
-
-
-module.exports.parsers = require('./lib/parsers_stream');
+'use strict'
 module.exports.sync    = require('./sync');
\ No newline at end of file
-module.exports.Error   = require('./lib/common').ProbeError;
diff --git a/node_modules/probe-image-size/lib/common.js b/node_modules/probe-image-size/lib/common.js
index a8cfd16..6e38d9d 100644
--- a/node_modules/probe-image-size/lib/common.js
+++ b/node_modules/probe-image-size/lib/common.js
@@ -1,23 +1,8 @@
 'use strict';
 
 
-var Transform    = require('stream').Transform;
-var streamParser = require('stream-parser');
 
 
-function ParserStream() {
-  Transform.call(this, { readableObjectMode: true });
-}
-
-// Inherit from Transform
-ParserStream.prototype = Object.create(Transform.prototype);
-ParserStream.prototype.constructor = ParserStream;
-
-streamParser(ParserStream.prototype);
-
-
-exports.ParserStream = ParserStream;
-
 
 exports.sliceEq = function (src, start, dest) {
   for (var i = start, j = 0; j < dest.length;) {
